@page "/todo"
@using BlazorTodo.Models

<h1 style="text-align: center">Todo's left: (@todos.Count(todo => !todo.IsDone))</h1>
<MudStack Justify="Justify.SpaceEvenly" Spacing="_stackSpaceing">
    @if (todos.Count(todo => todo.IsDone == false) > 0)
    {
        <MudPaper>
            <MudList>
                @foreach (var todo in todos)
                {
                    <MudListItem>
                        <MudStack Row="true">
                            <MudTextField @bind-Value="todo.Description"
                                          Variant="Variant.Text"
                                          Margin="Margin.Dense"></MudTextField>
                            <MudElement>@todo.DueDate</MudElement>
                            <MudCheckBox @bind-Checked="todo.IsDone"></MudCheckBox>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                           aria-label="delete" 
                                           @onclick="(_) => TodoDeleted(todo)"/> 
                        </MudStack>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    }
    <MudPaper>
        <MudStack Row="true">
            <MudTextField @bind-Value="newTodoDescription"
                          Label="What would you like to get done?"
                          Variant="Variant.Text"
                          Margin="Margin.Dense"></MudTextField>
            <MudDatePicker Label="What Day?" @bind-Date="newTodoDate"/>
            <MudTimePicker Label="What time?" AmPm="true" @bind-Time="newTodoTime"/>
            <MudFab @onclick="NewTodo" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" />
        </MudStack>
    </MudPaper>
</MudStack>

@code {
    private int _stackSpaceing = 3;
    
    private List<TodoItem> todos = new();
    private string? newTodoDescription;
    private DateTime? newTodoDate;
    private TimeSpan? newTodoTime;


    private void NewTodo()
    {
        todos.Add(new TodoItem
        {
            Description = newTodoDescription,
            DueDate = newTodoDate.Value.Add(newTodoTime.Value),
            IsDone = false
        });
        todos.Sort();
        CleanUpForm();
    }

    private void CleanUpForm()
    {
        newTodoDescription = String.Empty;
        newTodoDate = null;
        newTodoTime = null;
    }

    private void TodoDeleted(TodoItem todo)
    {
        todos.Remove(todo);
    }

}